import React, { useState, useEffect, useRef } from 'react';
import { User } from '@supabase/supabase-js';
import { 
  ArrowLeft, 
  Send, 
  Brain, 
  Sparkles, 
  MessageCircle,
  User as UserIcon,
  Bot,
  Loader
} from 'lucide-react';

interface MockAvatarChatProps {
  user: User;
  onBack: () => void;
}

interface Message {
  id: string;
  role: 'user' | 'avatar';
  content: string;
  timestamp: string;
}

const mockResponses = {
  // –û—Ç–≤–µ—Ç—ã –æ –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ
  '—Ü–µ–Ω–Ω–æ—Å—Ç–∏': '–ú–æ–∏ –≥–ª–∞–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ - —ç—Ç–æ —á–µ—Å—Ç–Ω–æ—Å—Ç—å, —Å–µ–º—å—è –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ. –Ø –≤–µ—Ä—é, —á—Ç–æ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤–µ—Ä–Ω—ã–º —Å–µ–±–µ, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –ø–µ—Ä–µ—Å—Ç–∞–≤–∞—Ç—å —É—á–∏—Ç—å—Å—è –∏ —Ä–∞—Å—Ç–∏ –∫–∞–∫ –ª–∏—á–Ω–æ—Å—Ç—å.',
  '—Ä–µ—à–µ–Ω–∏—è': '–Ø –æ–±—ã—á–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—é —Ä–µ—à–µ–Ω–∏—è –æ–±–¥—É–º–∞–Ω–Ω–æ, –≤–∑–≤–µ—à–∏–≤–∞—è –≤—Å–µ "–∑–∞" –∏ "–ø—Ä–æ—Ç–∏–≤". –°–Ω–∞—á–∞–ª–∞ —Å–æ–±–∏—Ä–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–æ—Ç–æ–º —Å–æ–≤–µ—Ç—É—é—Å—å —Å –±–ª–∏–∑–∫–∏–º–∏, –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –¥–µ–π—Å—Ç–≤—É—é. –ò–º–ø—É–ª—å—Å–∏–≤–Ω–æ—Å—Ç—å - –Ω–µ –º–æ–π –∫–æ–Ω–µ–∫.',
  '–º–æ—Ç–∏–≤–∞—Ü–∏—è': '–ú–µ–Ω—è –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–≤–∞—Ç—å —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ –∏ –≤–∏–¥–µ—Ç—å, –∫–∞–∫ —ç—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º. –û—Å–æ–±–µ–Ω–Ω–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç, –∫–æ–≥–¥–∞ —É–¥–∞–µ—Ç—Å—è —Ä–µ—à–∏—Ç—å —Å–ª–æ–∂–Ω—É—é –∑–∞–¥–∞—á—É —ç–ª–µ–≥–∞–Ω—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º.',
  '—Ö–∞—Ä–∞–∫—Ç–µ—Ä': '–Ø –¥–æ–≤–æ–ª—å–Ω–æ —Å–ø–æ–∫–æ–π–Ω—ã–π –∏ —Ä–∞—Å—Å—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –Ω–æ –º–æ–≥—É –±—ã—Ç—å –æ—á–µ–Ω—å —É–ø–æ—Ä–Ω—ã–º, –∫–æ–≥–¥–∞ –¥–µ–ª–æ –∫–∞—Å–∞–µ—Ç—Å—è –≤–∞–∂–Ω—ã—Ö –¥–ª—è –º–µ–Ω—è –≤–µ—â–µ–π. –î—Ä—É–∑—å—è –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ —è —Ö–æ—Ä–æ—à–∏–π —Å–ª—É—à–∞—Ç–µ–ª—å.',

  // –û—Ç–≤–µ—Ç—ã –æ —Å–µ–º—å–µ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö
  '—Å–µ–º—å—è': '–°–µ–º—å—è –¥–ª—è –º–µ–Ω—è - —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –≤—Å–µ–≥–æ. –£ –º–µ–Ω—è –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è –∂–µ–Ω–∞ –∏ –¥–≤–æ–µ –¥–µ—Ç–µ–π. –ú—ã —Å—Ç–∞—Ä–∞–µ–º—Å—è –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤–º–µ—Å—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º.',
  '–¥—Ä—É–∂–±–∞': '–î—Ä—É–∂–±–∞ - —ç—Ç–æ –≤–∑–∞–∏–º–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ. –£ –º–µ–Ω—è –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ –¥—Ä—É–∑–µ–π, –Ω–æ —Ç–µ, —á—Ç–æ –µ—Å—Ç—å - –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –≤—Ä–µ–º–µ–Ω–µ–º. –ú—ã –º–æ–∂–µ–º –º–µ—Å—è—Ü–∞–º–∏ –Ω–µ –æ–±—â–∞—Ç—å—Å—è, –Ω–æ –∫–æ–≥–¥–∞ –≤—Å—Ç—Ä–µ—á–∞–µ–º—Å—è, –∫–∞–∫ –±—É–¥—Ç–æ —Ä–∞—Å—Å—Ç–∞–ª–∏—Å—å –≤—á–µ—Ä–∞.',
  '–æ—Ç–Ω–æ—à–µ–Ω–∏—è': '–í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –≥–ª–∞–≤–Ω–æ–µ - —ç—Ç–æ —á–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ —É–≤–∞–∂–µ–Ω–∏–µ. –ù—É–∂–Ω–æ —É–º–µ—Ç—å —Å–ª—É—à–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∏ –∏–¥—Ç–∏ –Ω–∞ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—ã, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ —Ç–µ—Ä—è—Ç—å —Å–µ–±—è.',

  // –û—Ç–≤–µ—Ç—ã –æ —Ä–∞–±–æ—Ç–µ –∏ –∫–∞—Ä—å–µ—Ä–µ
  '—Ä–∞–±–æ—Ç–∞': '–Ø —Ä–∞–±–æ—Ç–∞—é –≤ —Å—Ñ–µ—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, –∑–∞–Ω–∏–º–∞—é—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤. –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è —á–µ–≥–æ-—Ç–æ –Ω–æ–≤–æ–≥–æ –æ—Ç –∏–¥–µ–∏ –¥–æ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.',
  '–∫–∞—Ä—å–µ—Ä–∞': '–ú–æ—è —Ü–µ–ª—å - –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –ø–æ –∫–∞—Ä—å–µ—Ä–Ω–æ–π –ª–µ—Å—Ç–Ω–∏—Ü–µ, –∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è —ç–∫—Å–ø–µ—Ä—Ç–æ–º –≤ —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏ –∏ –ø–æ–º–æ–≥–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–µ.',
  '–ø—Ä–æ—Ñ–µ—Å—Å–∏—è': '–í —Ä–∞–±–æ—Ç–µ –º–µ–Ω—è –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ—à–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–º–Ω—ã–º–∏ –ª—é–¥—å–º–∏. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–∏–Ω–æ—Å–∏—Ç —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ.',

  // –û—Ç–≤–µ—Ç—ã –æ —Ö–æ–±–±–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö
  '—Ö–æ–±–±–∏': '–í —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –ª—é–±–ª—é —á–∏—Ç–∞—Ç—å, –æ—Å–æ–±–µ–Ω–Ω–æ –Ω–∞—É—á–Ω—É—é —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫—É –∏ –∫–Ω–∏–≥–∏ –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏. –¢–∞–∫–∂–µ —É–≤–ª–µ–∫–∞—é—Å—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –∏ –∏–Ω–æ–≥–¥–∞ –∏–≥—Ä–∞—é –≤ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã —Å —Å–µ–º—å–µ–π.',
  '–∫–Ω–∏–≥–∏': '–ò–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è "–î—É–º–∞–π –º–µ–¥–ª–µ–Ω–Ω–æ... —Ä–µ—à–∞–π –±—ã—Å—Ç—Ä–æ" –ö–∞–Ω–µ–º–∞–Ω–∞. –ò–∑ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –ª—é–±–ª—é –°—Ç—Ä—É–≥–∞—Ü–∫–∏—Ö –∏ –õ–µ–º–∞.',
  '—Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ': '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –º–µ–Ω—è - —ç—Ç–æ —Å–ø–æ—Å–æ–± –∑–∞–º–µ–¥–ª–∏—Ç—å—Å—è –∏ —É–≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–æ—Ç—É –≤ –æ–±—ã—á–Ω—ã—Ö –≤–µ—â–∞—Ö. –û—Å–æ–±–µ–Ω–Ω–æ –ª—é–±–ª—é —Å–Ω–∏–º–∞—Ç—å –ø—Ä–∏—Ä–æ–¥—É –∏ —É–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω—ã.',

  // –û—Ç–≤–µ—Ç—ã –æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏
  '—Å–º—ã—Å–ª –∂–∏–∑–Ω–∏': '–°–º—ã—Å–ª –∂–∏–∑–Ω–∏, –ø–æ-–º–æ–µ–º—É, –≤ —Ç–æ–º, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –º–∏—Ä —á—É—Ç—å –ª—É—á—à–µ, —á–µ–º –æ–Ω –±—ã–ª –¥–æ —Ç–µ–±—è. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —á–µ—Ä–µ–∑ —Å–µ–º—å—é, —Ä–∞–±–æ—Ç—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥–æ–±—Ä—ã–µ –¥–µ–ª–∞.',
  '—É—Ä–æ–∫–∏': '–ì–ª–∞–≤–Ω—ã–π —É—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —è –∏–∑–≤–ª–µ–∫ –∏–∑ –∂–∏–∑–Ω–∏ - –Ω–µ —Å—Ç–æ–∏—Ç –±–æ—è—Ç—å—Å—è –æ—à–∏–±–æ–∫. –û—à–∏–±–∫–∏ - —ç—Ç–æ –æ–ø—ã—Ç, –∞ –æ–ø—ã—Ç - —ç—Ç–æ –º—É–¥—Ä–æ—Å—Ç—å.',
  '—Å–æ–≤–µ—Ç –º–æ–ª–æ–¥—ã–º': '–ú–æ–ª–æ–¥–æ–º—É –ø–æ–∫–æ–ª–µ–Ω–∏—é —è –±—ã –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç—å—Å—è –∂–∏—Ç—å. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å–æ–º, —É—á–∏—Ç–µ—Å—å —É –∫–∞–∂–¥–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ –±–ª–∏–∑–∫–∏—Ö –ª—é–¥—è—Ö.',

  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
  'default': [
    '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –î–∞–π –º–Ω–µ –ø–æ–¥—É–º–∞—Ç—å... –Ø –±—ã —Å–∫–∞–∑–∞–ª, —á—Ç–æ —ç—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–Ω–æ–≥–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, –Ω–æ –≤ —Ü–µ–ª–æ–º —è —Å–∫–ª–æ–Ω—è—é—Å—å –∫ —Ç–æ–º—É, —á—Ç–æ...',
    '–ó–Ω–∞–µ—à—å, —ç—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –º–Ω–µ –æ–¥–Ω—É –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –º–æ–µ–π –∂–∏–∑–Ω–∏. –ö–æ–≥–¥–∞-—Ç–æ —è —Ç–æ–∂–µ —Å—Ç–∞–ª–∫–∏–≤–∞–ª—Å—è —Å –ø–æ—Ö–æ–∂–µ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π...',
    '–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –Ø –≤—Å–µ–≥–¥–∞ —Å—á–∏—Ç–∞–ª, —á—Ç–æ –≤ —Ç–∞–∫–∏—Ö –≤–µ—â–∞—Ö –≤–∞–∂–Ω–æ –Ω–∞–π—Ç–∏ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É...',
    '–≠—Ç–æ –¥–æ–≤–æ–ª—å–Ω–æ –≥–ª—É–±–æ–∫–∞—è —Ç–µ–º–∞. –ü–æ –º–æ–µ–º—É –æ–ø—ã—Ç—É, –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ —ç—Ç–æ–º—É —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã...'
  ]
};

export default function MockAvatarChat({ user, onBack }: MockAvatarChatProps) {
  const [messages, setMessages] = useState<Message[]>([]);
  const [currentMessage, setCurrentMessage] = useState('');
  const [loading, setLoading] = useState(false);
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    // –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const welcomeMessage: Message = {
      id: Date.now().toString(),
      role: 'avatar',
      content: `–ü—Ä–∏–≤–µ—Ç! –Ø —Ü–∏—Ñ—Ä–æ–≤–æ–π –¥–≤–æ–π–Ω–∏–∫ –ï–≥–æ—Ä–∞ –û—Ä–ª–æ–≤–∞, –æ–±—É—á–µ–Ω–Ω—ã–π –ø–æ –µ–≥–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–µ. –î–∞–≤–∞–π –ø–æ–æ–±—â–∞–µ–º—Å—è!

–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞—Å–∞–µ–º–æ –ï–≥–æ—Ä–∞:

üéØ **–û –ª–∏—á–Ω–æ—Å—Ç–∏ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ:**
‚Ä¢ –ö–∞–∫–∏–µ —É —Ç–µ–±—è –≥–ª–∞–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –∂–∏–∑–Ω–∏?
‚Ä¢ –ö–∞–∫ —Ç—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å –≤–∞–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è?
‚Ä¢ –ß—Ç–æ —Ç–µ–±—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç?
‚Ä¢ –ö–∞–∫–∏–µ —É —Ç–µ–±—è —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã?

üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–û —Å–µ–º—å–µ –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö:**
‚Ä¢ –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–≤–æ–µ–π —Å–µ–º—å–µ
‚Ä¢ –ß—Ç–æ –¥–ª—è —Ç–µ–±—è –∑–Ω–∞—á–∏—Ç –¥—Ä—É–∂–±–∞?
‚Ä¢ –ö–∞–∫ —Ç—ã —Å—Ç—Ä–æ–∏—à—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –ª—é–¥—å–º–∏?

üíº **–û —Ä–∞–±–æ—Ç–µ –∏ –∫–∞—Ä—å–µ—Ä–µ:**
‚Ä¢ –ß–µ–º —Ç—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ?
‚Ä¢ –ö–∞–∫–∏–µ —É —Ç–µ–±—è –∫–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏?
‚Ä¢ –ß—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —Ç–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ?

üé® **–û —Ö–æ–±–±–∏ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö:**
‚Ä¢ –ß–µ–º —Ç—ã —É–≤–ª–µ–∫–∞–µ—à—å—Å—è –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è?
‚Ä¢ –ö–∞–∫–∏–µ –∫–Ω–∏–≥–∏/—Ñ–∏–ª—å–º—ã —Ç–µ–±–µ –Ω—Ä–∞–≤—è—Ç—Å—è?
‚Ä¢ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Ç–≤–æ—Ä—á–µ—Å–∫–∏–µ —É–≤–ª–µ—á–µ–Ω–∏—è?

üåü **–û –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏:**
‚Ä¢ –í —á—ë–º —Å–º—ã—Å–ª –∂–∏–∑–Ω–∏ –ø–æ-—Ç–≤–æ–µ–º—É?
‚Ä¢ –ö–∞–∫–∏–µ —É—Ä–æ–∫–∏ —Ç—ã –∏–∑–≤–ª—ë–∫ –∏–∑ –∂–∏–∑–Ω–∏?
‚Ä¢ –ß—Ç–æ –±—ã —Ç—ã –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª –º–æ–ª–æ–¥–æ–º—É –ø–æ–∫–æ–ª–µ–Ω–∏—é?

–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –æ—Ç–≤–µ—á—É —Ç–∞–∫, –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏–ª –±—ã —Å–∞–º –ï–≥–æ—Ä! üòä`,
      timestamp: new Date().toISOString()
    };

    setMessages([welcomeMessage]);
  }, []);

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const findBestResponse = (userMessage: string): string => {
    const message = userMessage.toLowerCase();
    
    // –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for (const [key, response] of Object.entries(mockResponses)) {
      if (key !== 'default' && message.includes(key)) {
        return response as string;
      }
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if (message.includes('—Å–µ–º—å') || message.includes('—Ä–æ–¥–∏—Ç–µ–ª') || message.includes('–∂–µ–Ω') || message.includes('–¥–µ—Ç')) {
      return mockResponses.—Å–µ–º—å—è;
    }
    if (message.includes('–¥—Ä—É–∑') || message.includes('–¥—Ä—É–∂–±')) {
      return mockResponses.–¥—Ä—É–∂–±–∞;
    }
    if (message.includes('—Ä–∞–±–æ—Ç') || message.includes('–ø—Ä–æ—Ñ–µ—Å') || message.includes('–∫–∞—Ä—å–µ—Ä')) {
      return mockResponses.—Ä–∞–±–æ—Ç–∞;
    }
    if (message.includes('—Ö–æ–±–±–∏') || message.includes('—É–≤–ª–µ—á') || message.includes('—Å–≤–æ–±–æ–¥–Ω')) {
      return mockResponses.—Ö–æ–±–±–∏;
    }
    if (message.includes('–∫–Ω–∏–≥') || message.includes('—á–∏—Ç–∞')) {
      return mockResponses.–∫–Ω–∏–≥–∏;
    }
    if (message.includes('—Å–º—ã—Å–ª') || message.includes('—Ñ–∏–ª–æ—Å–æ—Ñ')) {
      return mockResponses['—Å–º—ã—Å–ª –∂–∏–∑–Ω–∏'];
    }
    if (message.includes('—Å–æ–≤–µ—Ç') || message.includes('–º–æ–ª–æ–¥')) {
      return mockResponses['—Å–æ–≤–µ—Ç –º–æ–ª–æ–¥—ã–º'];
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
    const defaultResponses = mockResponses.default;
    return defaultResponses[Math.floor(Math.random() * defaultResponses.length)];
  };

  const handleSendMessage = async () => {
    if (!currentMessage.trim() || loading) return;

    const userMessage = currentMessage.trim();
    setCurrentMessage('');
    setLoading(true);

    try {
      // –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const newUserMessage: Message = {
        id: Date.now().toString(),
        role: 'user',
        content: userMessage,
        timestamp: new Date().toISOString()
      };

      setMessages(prev => [...prev, newUserMessage]);

      // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è
      setIsTyping(true);

      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –æ—Ç–≤–µ—Ç–∞ (1-3 —Å–µ–∫—É–Ω–¥—ã)
      const delay = Math.random() * 2000 + 1000;
      await new Promise(resolve => setTimeout(resolve, delay));

      // –ù–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç
      const avatarResponse = findBestResponse(userMessage);

      // –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞
      const avatarMessage: Message = {
        id: (Date.now() + 1).toString(),
        role: 'avatar',
        content: avatarResponse,
        timestamp: new Date().toISOString()
      };

      setMessages(prev => [...prev, avatarMessage]);

    } catch (error) {
      console.error('Error sending message:', error);
      
      const errorMessage: Message = {
        id: (Date.now() + 2).toString(),
        role: 'avatar',
        content: '–ò–∑–≤–∏–Ω–∏, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!',
        timestamp: new Date().toISOString()
      };
      
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setLoading(false);
      setIsTyping(false);
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50">
      {/* Header */}
      <header className="bg-white/95 backdrop-blur-sm border-b border-gray-200">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between py-4">
            <button
              onClick={onBack}
              className="flex items-center text-blue-600 hover:text-blue-700 transition-colors"
            >
              <ArrowLeft className="h-5 w-5 mr-2" />
              –ù–∞–∑–∞–¥ –∫ –ø–∞–Ω–µ–ª–∏
            </button>

            <div className="flex items-center space-x-3">
              <div className="bg-gradient-to-br from-purple-600 to-blue-600 p-2 rounded-xl">
                <Bot className="h-6 w-6 text-white" />
              </div>
              <div>
                <h1 className="text-lg font-bold text-gray-900">–ß–∞—Ç —Å —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–æ–ø–∏–µ–π</h1>
                <p className="text-sm text-gray-500">
                  –î–µ–º–æ-–≤–µ—Ä—Å–∏—è ‚Ä¢ –ï–≥–æ—Ä –û—Ä–ª–æ–≤
                </p>
              </div>
            </div>

            <div className="text-right">
              <p className="text-sm font-medium text-gray-900">
                {user.user_metadata?.full_name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
              </p>
              <p className="text-xs text-gray-500">MOSSALITE</p>
            </div>
          </div>
        </div>
      </header>

      {/* Chat Area */}
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="bg-white rounded-2xl shadow-xl overflow-hidden">
          {/* Chat Header */}
          <div className="bg-gradient-to-r from-purple-50 to-blue-50 px-6 py-4 border-b border-gray-200">
            <div className="flex items-center justify-between">
              <div>
                <h3 className="text-lg font-semibold text-gray-900 mb-1">
                  ü§ñ –î–µ–º–æ: –¶–∏—Ñ—Ä–æ–≤–∞—è –∫–æ–ø–∏—è –ï–≥–æ—Ä–∞ –û—Ä–ª–æ–≤–∞
                </h3>
                <p className="text-gray-600 text-sm">
                  –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –≤ —Å—Ç–∏–ª–µ –ï–≥–æ—Ä–∞!
                </p>
              </div>
              
              <div className="flex items-center space-x-4">
                <div className="text-center">
                  <div className="w-3 h-3 bg-green-400 rounded-full mx-auto mb-1"></div>
                  <div className="text-xs text-gray-500">–û–Ω–ª–∞–π–Ω</div>
                </div>
                
                <div className="text-center">
                  <div className="text-2xl font-bold text-purple-600">
                    DEMO
                  </div>
                  <div className="text-xs text-gray-500">–í–µ—Ä—Å–∏—è</div>
                </div>
              </div>
            </div>
          </div>

          {/* Messages */}
          <div className="h-96 overflow-y-auto p-6 space-y-4">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                <div className={`max-w-xs lg:max-w-md flex items-start space-x-3 ${
                  message.role === 'user' ? 'flex-row-reverse space-x-reverse' : ''
                }`}>
                  <div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${
                    message.role === 'user' 
                      ? 'bg-blue-600' 
                      : 'bg-gradient-to-r from-purple-600 to-blue-600'
                  }`}>
                    {message.role === 'user' ? (
                      <UserIcon className="h-4 w-4 text-white" />
                    ) : (
                      <Bot className="h-4 w-4 text-white" />
                    )}
                  </div>
                  
                  <div className={`px-4 py-3 rounded-2xl ${
                    message.role === 'user'
                      ? 'bg-blue-600 text-white rounded-br-md'
                      : 'bg-gray-100 text-gray-900 rounded-bl-md'
                  }`}>
                    <p className="text-sm leading-relaxed whitespace-pre-wrap">
                      {message.content}
                    </p>
                    <p className={`text-xs mt-2 ${
                      message.role === 'user' ? 'text-blue-100' : 'text-gray-500'
                    }`}>
                      {new Date(message.timestamp).toLocaleTimeString('ru-RU', {
                        hour: '2-digit',
                        minute: '2-digit'
                      })}
                    </p>
                  </div>
                </div>
              </div>
            ))}
            
            {isTyping && (
              <div className="flex justify-start">
                <div className="flex items-start space-x-3">
                  <div className="w-8 h-8 rounded-full bg-gradient-to-r from-purple-600 to-blue-600 flex items-center justify-center">
                    <Bot className="h-4 w-4 text-white" />
                  </div>
                  <div className="bg-gray-100 text-gray-900 rounded-2xl rounded-bl-md px-4 py-3">
                    <div className="flex items-center space-x-2">
                      <Loader className="h-4 w-4 animate-spin" />
                      <span className="text-sm">–ï–≥–æ—Ä –ø–µ—á–∞—Ç–∞–µ—Ç...</span>
                    </div>
                  </div>
                </div>
              </div>
            )}
            
            <div ref={messagesEndRef} />
          </div>

          {/* Input Area */}
          <div className="border-t border-gray-200 p-6">
            <div className="flex space-x-4">
              <div className="flex-1">
                <textarea
                  value={currentMessage}
                  onChange={(e) => setCurrentMessage(e.target.value)}
                  onKeyPress={handleKeyPress}
                  placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–æ–ø–∏–∏ –ï–≥–æ—Ä–∞..."
                  className="w-full p-4 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent resize-none"
                  rows={2}
                  disabled={loading}
                />
              </div>
              
              <button
                onClick={handleSendMessage}
                disabled={!currentMessage.trim() || loading}
                className="bg-purple-600 text-white p-4 rounded-xl hover:bg-purple-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center"
              >
                <Send className="h-5 w-5" />
              </button>
            </div>
            
            <div className="mt-4 text-center">
              <p className="text-sm text-gray-500">
                üí° –≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å –æ —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö, —Å–µ–º—å–µ, —Ä–∞–±–æ—Ç–µ –∏–ª–∏ –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏
              </p>
            </div>
          </div>
        </div>

        {/* Demo Features */}
        <div className="mt-8 grid md:grid-cols-3 gap-6">
          <div className="bg-white rounded-xl p-6 shadow-lg">
            <MessageCircle className="h-8 w-8 text-blue-600 mb-3" />
            <h3 className="font-semibold text-gray-900 mb-2">–£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã</h3>
            <p className="text-gray-600 text-sm">
              –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –≤ —Å—Ç–∏–ª–µ –ï–≥–æ—Ä–∞ –û—Ä–ª–æ–≤–∞
            </p>
          </div>
          
          <div className="bg-white rounded-xl p-6 shadow-lg">
            <Sparkles className="h-8 w-8 text-purple-600 mb-3" />
            <h3 className="font-semibold text-gray-900 mb-2">–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–µ —á–µ—Ä—Ç—ã</h3>
            <p className="text-gray-600 text-sm">
              –û—Ç–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, —Ü–µ–Ω–Ω–æ—Å—Ç—è—Ö –∏ –æ–ø—ã—Ç–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
            </p>
          </div>
          
          <div className="bg-white rounded-xl p-6 shadow-lg">
            <Brain className="h-8 w-8 text-teal-600 mb-3" />
            <h3 className="font-semibold text-gray-900 mb-2">–î–µ–º–æ-—Ä–µ–∂–∏–º</h3>
            <p className="text-gray-600 text-sm">
              –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. –í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –æ—Ç–≤–µ—Ç—ã –±—É–¥—É—Ç –µ—â—ë —Ç–æ—á–Ω–µ–µ
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}